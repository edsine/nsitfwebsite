name: "Production Deploy to Amazon ECS"

on:
  push:
    branches:
      - staging

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: servicom
  ECS_SERVICE: staging-ensitf-servicom
  ECS_CLUSTER: staging-cluster
  ECS_TASK_DEFINITION: task-definition.json
  BRANCH: ${{ github.head_ref || github.ref_name }}
  AWS_ASSUME_ROLE: arn:aws:iam::746669210359:role/github-action

permissions:
  id-token: write 
  contents: read

jobs:
  buildImage:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login Amazon ECR
        id: login-ecr
        uses: ./.github/workflows/actions/config/login-oidc
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          region: ${{ env.AWS_REGION }}
      - name: Build for Amazon ECS task
        id: build-image
        uses: ./.github/workflows/actions/build
        with:
          branch: ${{ env.BRANCH }}
          ecrRepo: ${{ env.ECR_REPOSITORY }}
          ecrRegistry: ${{ steps.login-ecr.outputs.registry }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login Amazon ECR
        id: login-ecr
        uses: ./.github/workflows/actions/config/login-oidc
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          region: ${{ env.AWS_REGION }}
      - name: Deploy Amazon ECS task
        id: deploy_image
        uses: ./.github/workflows/actions/deploy
        with:
          branch: ${{ env.BRANCH }}
          taskDefinition: ${{ env.ECS_TASK_DEFINITION }}
          service: ${{ env.ECS_SERVICE }}
          containerName: ${{ env.ECS_SERVICE }}
          ecrRepo: ${{ env.ECR_REPOSITORY }}
          cluster: ${{ env.ECS_CLUSTER }}
          ecrRegistry: ${{ steps.login-ecr.outputs.registry }}
